{"formatVersion":"1.0","generatedAt":"2021-12-21T06:19:21Z","generatedBy":{"name":"XC"},"keywords":["swift","swiftui"],"name":"XCStudio takamashiro","overview":"Swift packages published by XCStudio","packages":[{"keywords":["formatting","swift"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/apple/swift-format/main/LICENSE.txt"},"readmeURL":"https://github.com/apple/swift-format/blob/main/README.md","summary":"Formatting technology for Swift source code.","url":"https://github.com/apple/swift-format","versions":[{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-format","products":[{"name":"SwiftFormat","targets":["SwiftFormat","SwiftFormatConfiguration"],"type":{"library":["automatic"]}},{"name":"generate-pipeline","targets":["generate-pipeline"],"type":{"executable":null}},{"name":"swift-format","targets":["swift-format"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftFormat","name":"SwiftFormat"},{"moduleName":"SwiftFormatConfiguration","name":"SwiftFormatConfiguration"},{"moduleName":"generate_pipeline","name":"generate-pipeline"},{"moduleName":"swift_format","name":"swift-format"}],"toolsVersion":"5.1"}},"version":"0.50400.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"packageName":"swift-format","products":[{"name":"SwiftFormat","targets":["SwiftFormat","SwiftFormatConfiguration"],"type":{"library":["automatic"]}},{"name":"generate-pipeline","targets":["generate-pipeline"],"type":{"executable":null}},{"name":"swift-format","targets":["swift-format"],"type":{"executable":null}}],"targets":[{"moduleName":"SwiftFormat","name":"SwiftFormat"},{"moduleName":"SwiftFormatConfiguration","name":"SwiftFormatConfiguration"},{"moduleName":"generate_pipeline","name":"generate-pipeline"},{"moduleName":"swift_format","name":"swift-format"}],"toolsVersion":"5.1"}},"version":"0.50300.0"}]},{"keywords":["Network Lib","swift"],"license":{"name":"MIT","url":"https://raw.githubusercontent.com/Alamofire/Alamofire/master/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/Alamofire/Alamofire/master/README.md","summary":"Elegant HTTP Networking in Swift","url":"https://github.com/Alamofire/Alamofire","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.5"}},"version":"5.5.0"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.1"}},"version":"5.4.4"},{"defaultToolsVersion":"5.1","manifests":{"5.1":{"minimumPlatformVersions":[{"name":"macos","version":"10.12"},{"name":"ios","version":"10.0"},{"name":"tvos","version":"10.0"},{"name":"watchos","version":"3.0"}],"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.1"}},"version":"5.4.3"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.0"}},"version":"4.9.1"},{"defaultToolsVersion":"5.0","manifests":{"5.0":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"5.0"}},"version":"4.9.0"},{"defaultToolsVersion":"4.2","manifests":{"4.2":{"packageName":"Alamofire","products":[{"name":"Alamofire","targets":["Alamofire"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"Alamofire","name":"Alamofire"}],"toolsVersion":"4.2"}},"version":"4.8.2"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: chi xiao","organization":"chi xiao","organizationalUnit":"2NKZFSKJ2W","userID":"2NKZFSKJ2W"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGY0RDQ0JGaWdBd0lCQWdJUUh5eHM2ZEdtY243dTJmYzNrY0VNR3pBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXhNVEl5TVRBNE5ETXhNVm9YRFRJeU1USXlNVEE0TkRNeE1Gb3dmakVhTUJnR0NnbVNKb21UOGl4a0FRRU1DakpPUzFwR1UwdEtNbGN4S3pBcEJnTlZCQU1NSWxOM2FXWjBJRkJoWTJ0aFoyVWdRMjlzYkdWamRHbHZiam9nWTJocElIaHBZVzh4RXpBUkJnTlZCQXNNQ2pKT1MxcEdVMHRLTWxjeEVUQVBCZ05WQkFvTUNHTm9hU0I0YVdGdk1Rc3dDUVlEVlFRR0V3SkRUakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLZDdORERSdzNKck00UGNPWVAvb01za3BqTmJqMmlpK2JISVluVWtYNkJhMnViTzA0bmJZclBFeG1ia1BXaUJLV3pOK1Q5U3ZaYStHemYyMGJsMjFLVnFhc0hjQ0NvSGJqT2orSWJ6THVHUmZabFk3cUh2cDlORWpqbjZnVmlnbis5Tmd6SzR4Y3JMM2MySEdXRitkWDRKeG5NNmJIT24zNlBHZ3NDY1BjeDNnQ053VVFoR2R2UEZSWXgwdk51TU5vaHArMHR6cHBER1Roc1JrbU91K3Q2bVNkc05MWXR0M1dYL1RFS3d1MUhEVkwxZ0djaWpPVEJndE9KNURmOXlDWTEwbGdiNzlCblNxOWd3RkxVK2Q5QmZZYnY0L2VaMHQ1U05lcCszTlAwRXZzeDBvUlB2ZG9YTDFwQllYZXFCbEJ0eU4rdCs4NjliZ1hwQ0FXaCs3RHNDQXdFQUFhT0NBZkV3Z2dIdE1Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNmN0FGWkQ1cjJRS2toSzVKaWhqREpmc3A3SXdRUVlJS3dZQkJRVUhBUUVFTlRBek1ERUdDQ3NHQVFVRkJ6QUJoaVZvZEhSd09pOHZiMk56Y0M1aGNIQnNaUzVqYjIwdmIyTnpjREF6TFhkM1pISm5NekU1TUlJQkhnWURWUjBnQklJQkZUQ0NBUkV3Z2dFTkJna3Foa2lHOTJOa0JRRXdnZjh3Z2NNR0NDc0dBUVVGQndJQ01JRzJESUd6VW1Wc2FXRnVZMlVnYjI0Z2RHaHBjeUJqWlhKMGFXWnBZMkYwWlNCaWVTQmhibmtnY0dGeWRIa2dZWE56ZFcxbGN5QmhZMk5sY0hSaGJtTmxJRzltSUhSb1pTQjBhR1Z1SUdGd2NHeHBZMkZpYkdVZ2MzUmhibVJoY21RZ2RHVnliWE1nWVc1a0lHTnZibVJwZEdsdmJuTWdiMllnZFhObExDQmpaWEowYVdacFkyRjBaU0J3YjJ4cFkza2dZVzVrSUdObGNuUnBabWxqWVhScGIyNGdjSEpoWTNScFkyVWdjM1JoZEdWdFpXNTBjeTR3TndZSUt3WUJCUVVIQWdFV0syaDBkSEJ6T2k4dmQzZDNMbUZ3Y0d4bExtTnZiUzlqWlhKMGFXWnBZMkYwWldGMWRHaHZjbWwwZVM4d0ZnWURWUjBsQVFIL0JBd3dDZ1lJS3dZQkJRVUhBd013SFFZRFZSME9CQllFRk9Cck0vTjV2ZWZiZzlEaytmK2JkaGFxNEF6bU1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBUUJnb3Foa2lHOTJOa0JnRWpCQUlGQURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXdnUnlmL0oxU3k3V3ExcVI5a2NiNjJMWW5CSE9yN3NuaTdoRXB0eERPQVV3Q3J4V2FIdzc0dlVraHR4RWpQVG9SanlZaTJpQU5JZE1TR3Rmbkl3bnlvTEJGWDU0UVV0SHNsOFA1cTE5TkxsaDE5cG4xd3puYTY4VG5za2xVWXZFRzlNR2xnY0UrVnIwWXFRZTF1czByVW1HSVdMamdZZFVUd0lyT2hQY2RMZ2hZUUdVV2g1VzFOSjNidHJFTCtBcWp1K0xUTDBsZFVFSlh6SlZJNzZPMFFPMXhDS2NjeEdnSDBLS1BNTHcrLy8zdUpjWUlpMGg3Y3BWcVpWQWdMOTBsU3lBdFZzMDl6WnFWWlIrTVhsR0RyL0h6eTUxS3FjdG11YmdDN0dGVjF2aWVweUhySmsvLzJiUDBSVnQxMkkxMXNxTmk2RHJUUmwyb29FM200Y2VTZz09IgogIF0KfQ..a_rtCJFOMGnHfe9BePl-O1O3JzpND2Na35CzzH-B0KyeV8DCEcH72SV7M0Ivk6mf56PakCJ9DxvvAf-sUbyYT-uIJ_A4y7A_xT_FFosltrnZRCdiMYzmTq5Hp4Yl2wUFyborj-2Tz7YJFKarC8ZXn1avlhBqrk8Zk1FRtPEPgDshxzUqp6daaoqBMM6yWgPoSQP33831qwiaBGhwmLQ5xdZkuRqyhg0CeYHEfBt9nNmnF8p7sI4mHwHcd-GqlZLDd1m3sbAByrnIBjevODB31Jp4xxfLEbHt4Y_0MBTqdqNWpyLxrL9aGLRwSM2FwL9xupGftDh2jMq4MQVOj8qbpQ"}}